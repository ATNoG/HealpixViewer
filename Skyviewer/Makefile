#############################################################################
# Makefile for building: Skyviewer
# Generated by qmake (2.01a) (Qt 4.7.2) on: Wed Jul 27 12:22:55 2011
# Project:  Skyviewer.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile Skyviewer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -pg -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -pg -v -da -Q
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lchealpix -lm -lcfitsio -L/usr/lib -lqglviewer-qt4 -lQtXml -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		mapviewport.cpp \
		healpixmap.cpp \
		workspace.cpp \
		mapviewer.cpp \
		face.cpp \
		boundary.cpp \
		vertice.cpp \
		tesselation.cpp \
		colortable.cpp \
		fieldmap.cpp \
		facevertices.cpp \
		facecache.cpp \
		texture.cpp \
		cache.cpp moc_mainwindow.cpp \
		moc_mapviewport.cpp \
		moc_workspace.cpp \
		moc_mapviewer.cpp \
		moc_facecache.cpp \
		qrc_icons.cpp
OBJECTS       = main.o \
		mainwindow.o \
		mapviewport.o \
		healpixmap.o \
		workspace.o \
		mapviewer.o \
		face.o \
		boundary.o \
		vertice.o \
		tesselation.o \
		colortable.o \
		fieldmap.o \
		facevertices.o \
		facecache.o \
		texture.o \
		cache.o \
		moc_mainwindow.o \
		moc_mapviewport.o \
		moc_workspace.o \
		moc_mapviewer.o \
		moc_facecache.o \
		qrc_icons.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Skyviewer.pro
QMAKE_TARGET  = Skyviewer
DESTDIR       = 
TARGET        = Skyviewer

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Skyviewer.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libqglviewer-qt4.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile Skyviewer.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libqglviewer-qt4.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile Skyviewer.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Skyviewer1.0.0 || $(MKDIR) .tmp/Skyviewer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Skyviewer1.0.0/ && $(COPY_FILE) --parents mainwindow.h mapviewport.h healpixmap.h workspace.h mapviewer.h face.h boundary.h vertice.h tesselation.h colortable.h define_colortable.h healpixutil.h fieldmap.h facevertices.h facecache.h blockingqueue.h texture.h cache.h .tmp/Skyviewer1.0.0/ && $(COPY_FILE) --parents icons.qrc .tmp/Skyviewer1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp mapviewport.cpp healpixmap.cpp workspace.cpp mapviewer.cpp face.cpp boundary.cpp vertice.cpp tesselation.cpp colortable.cpp fieldmap.cpp facevertices.cpp facecache.cpp texture.cpp cache.cpp .tmp/Skyviewer1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/Skyviewer1.0.0/ && (cd `dirname .tmp/Skyviewer1.0.0` && $(TAR) Skyviewer1.0.0.tar Skyviewer1.0.0 && $(COMPRESS) Skyviewer1.0.0.tar) && $(MOVE) `dirname .tmp/Skyviewer1.0.0`/Skyviewer1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Skyviewer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_mapviewport.cpp moc_workspace.cpp moc_mapviewer.cpp moc_facecache.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_mapviewport.cpp moc_workspace.cpp moc_mapviewer.cpp moc_facecache.cpp
moc_mainwindow.cpp: workspace.h \
		mapviewport.h \
		mapviewer.h \
		healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_mapviewport.cpp: mapviewer.h \
		healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h \
		mapviewport.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mapviewport.h -o moc_mapviewport.cpp

moc_workspace.cpp: mapviewport.h \
		mapviewer.h \
		healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h \
		workspace.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) workspace.h -o moc_workspace.cpp

moc_mapviewer.cpp: healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h \
		mapviewer.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mapviewer.h -o moc_mapviewer.cpp

moc_facecache.cpp: face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		blockingqueue.h \
		facecache.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) facecache.h -o moc_facecache.cpp

compiler_rcc_make_all: qrc_icons.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_icons.cpp
qrc_icons.cpp: icons.qrc \
		images/icons/extract.gif \
		images/icons/3dview.gif \
		images/icons/colormap.gif \
		images/icons/mollview.gif \
		images/icons/sync.gif \
		images/icons/selectall.gif \
		images/icons/viewports.gif \
		images/icons/deselectall.gif
	/usr/bin/rcc -name icons icons.qrc -o qrc_icons.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		workspace.h \
		mapviewport.h \
		mapviewer.h \
		healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		workspace.h \
		mapviewport.h \
		mapviewer.h \
		healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h \
		ui_mainwindow.h \
		fieldmap.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

mapviewport.o: mapviewport.cpp mapviewport.h \
		mapviewer.h \
		healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h \
		workspace.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mapviewport.o mapviewport.cpp

healpixmap.o: healpixmap.cpp healpixmap.h \
		colortable.h \
		healpixutil.h \
		fieldmap.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o healpixmap.o healpixmap.cpp

workspace.o: workspace.cpp workspace.h \
		mapviewport.h \
		mapviewer.h \
		healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o workspace.o workspace.cpp

mapviewer.o: mapviewer.cpp mapviewer.h \
		healpixmap.h \
		colortable.h \
		healpixutil.h \
		tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mapviewer.o mapviewer.cpp

face.o: face.cpp face.h \
		vertice.h \
		facevertices.h \
		boundary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o face.o face.cpp

boundary.o: boundary.cpp boundary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o boundary.o boundary.cpp

vertice.o: vertice.cpp vertice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vertice.o vertice.cpp

tesselation.o: tesselation.cpp tesselation.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		facecache.h \
		blockingqueue.h \
		texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tesselation.o tesselation.cpp

colortable.o: colortable.cpp colortable.h \
		define_colortable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o colortable.o colortable.cpp

fieldmap.o: fieldmap.cpp fieldmap.h \
		healpixutil.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fieldmap.o fieldmap.cpp

facevertices.o: facevertices.cpp facevertices.h \
		boundary.h \
		vertice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o facevertices.o facevertices.cpp

facecache.o: facecache.cpp facecache.h \
		face.h \
		vertice.h \
		facevertices.h \
		boundary.h \
		blockingqueue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o facecache.o facecache.cpp

texture.o: texture.cpp texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o texture.o texture.cpp

cache.o: cache.cpp cache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cache.o cache.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_mapviewport.o: moc_mapviewport.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mapviewport.o moc_mapviewport.cpp

moc_workspace.o: moc_workspace.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_workspace.o moc_workspace.cpp

moc_mapviewer.o: moc_mapviewer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mapviewer.o moc_mapviewer.cpp

moc_facecache.o: moc_facecache.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_facecache.o moc_facecache.cpp

qrc_icons.o: qrc_icons.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_icons.o qrc_icons.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

